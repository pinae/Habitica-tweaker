# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-08-17 14:23
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('user_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('api_key', models.CharField(max_length=50)),
                ('cron_time', models.DateTimeField()),
                ('sync_tag', models.CharField(default='', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Daily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('notes', models.TextField()),
                ('priority', models.FloatField()),
                ('value', models.FloatField()),
                ('attribute', models.CharField(max_length=3)),
                ('repeat_days', models.CharField(max_length=50)),
                ('everyX', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='DailyChecklistItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('daily', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checklist', to='sync_accounts.Daily')),
            ],
        ),
        migrations.CreateModel(
            name='DailyId',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('daily', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ids', to='sync_accounts.Daily')),
            ],
        ),
        migrations.CreateModel(
            name='Habit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('notes', models.TextField()),
                ('good', models.BooleanField()),
                ('bad', models.BooleanField()),
                ('priority', models.FloatField()),
                ('value', models.FloatField()),
                ('attribute', models.CharField(max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='HabitId',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('habit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ids', to='sync_accounts.Habit')),
            ],
        ),
        migrations.CreateModel(
            name='Todo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('notes', models.TextField()),
                ('priority', models.FloatField()),
                ('value', models.FloatField()),
                ('attribute', models.CharField(max_length=3)),
                ('completed', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='TodoChecklistItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('todo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checklist', to='sync_accounts.Todo')),
            ],
        ),
        migrations.CreateModel(
            name='TodoId',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('todo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ids', to='sync_accounts.Todo')),
            ],
        ),
    ]
